angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/table/ckeditor.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle(), \'schema-form-required\': form.inputrequired === true}" for="{{form.key.slice(-1)[0]}}" ng-bind-html="form.title"></label><div class="joininputcol"><div ng-class="form.fieldHtmlClass" ckeditor="form.options" ng-model="$$value$$" ready="form.onReady()" schema-validate="form"></div><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/cutuploadpic.html",'<div class="upload-button form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle(), \'schema-form-required\': form.inputrequired === true}" for="{{form.key.slice(-1)[0]}}">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label><div class="joininputcol" ng-class="form.fieldHtmlClass"><div class="uploadimgbody"><div ng-style="{\'background\':\'url(\'+$$value$$+\') left top / contain no-repeat\'}" class="uploadimgcls"></div></div><div class="uploadimgcontent"><div class="uploadimgbuttom" file-button="" file-change="$$value$$=image" fl-title="剪裁" fl-image-format="image/jpeg" fl-aspect-ratio="1"><span class=\'btn {{form.btnHtmlClass || "btn-success"}}\'>{{form.btn_title || \'选择图片\'}}</span></div><span class="uploadimglabel" ng-if="form.options.suggestlabel" ng-bind-html="form.options.suggestlabel"></span></div><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/cutuploadpics.html",'<div class="upload-buttons form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle(), \'schema-form-required\': form.inputrequired === true}" for="{{form.key.slice(-1)[0]}}">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label><div class="joininputcol" ng-class="form.fieldHtmlClass"><div class="upload-img-one" ng-repeat="pic in $$value$$ track by $index"><div ng-style="{\'background\':\'url(\'+pic+\') left top / contain no-repeat\'}" class="uploadimgscls"></div><div class="glyphicon glyphicon-remove-sign file-del" ng-click="$$value$$.splice($index, 1)"></div></div><div class="uploadimgscontent"><div class="uploadimgsbuttom" ng-if="form.options.maxNum ? form.options.maxNum > $$value$$.length : true" file-button="" file-change="$$value$$.push(image)" fl-title="剪裁" fl-image-format="image/jpeg"><span class=\'btn {{form.btnHtmlClass || "btn-success"}}\'>{{form.btn_title || \'选择图片\'}}</span></div><span class="uploadimgslabel" ng-if="form.options.suggestlabel" ng-bind-html="form.options.suggestlabel"></span></div><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/date-range.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'schema-form-required\': form.inputrequired === true}" ng-show="showTitle()">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label><div class="joininputcol {{form.fieldHtmlClass}}" ng-class="{\'input-group\': (form.fieldAddonLeft || form.fieldAddonRight)}"><input type="daterange" id="{{form.key.slice(-1)[0]}}" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" sf-changed="form" ng-model-options="form.ngModelOptions" ng-model="$$value$$" enabletimepicker="form.enabletimepicker||MosEnum.momentTimepicker" single-date-picker="form.singleDatePicker" min-date="form.minDate" max-date="form.maxDate" limit="form.limit" format="form.locale.format" separator="form.locale.separator" locale="form.locale||MosEnum.momentLocales" ranges="form.ranges||MosEnum.momentRanges" ng-disabled="{{form.readonly}}" schema-validate="form" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"> <span ng-if="form.fieldAddonRight && form.fieldAddonRight.type!=\'button\'" class="input-group-addon {{form.fieldAddonRight.htmlClass}}"></span> <span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-ok\': hasSuccess(), \'glyphicon-remove\': hasError() }" aria-hidden="true"></span> <span ng-if="hasError() || hasSuccess()" id="{{form.key.slice(-1)[0] + \'Status\'}}" class="sr-only">{{ hasSuccess() ? \'(success)\' : \'(error)\' }}</span><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/mos-array.html",'<div sf-array="form" class="form-group-sm {{form.htmlClass}}" style="margin-bottom:15px" ng-model="$$value$$" ng-model-options="form.ngModelOptions"><div style="padding-right:0;width:100%" class="{{form.fieldHtmlClass}}" ng-model="modelArray"><sf-decorator ng-repeat="tmpform in form.items" ng-init="tmpform.notitle = true" class="{{tmpform.htmlClass}}" form="tmpform"></sf-decorator></div></div>'),e.put("directives/decorators/bootstrap/table/mos-button-group.html",'<div class="btn-group" ng-model="$$value$$"><button type="button" class="btn btn-default dropdown-toggle {{form.htmlClass}}" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">{{form.title}} <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right"><li ng-repeat="item in form.actions" role="{{item.title}}" class="{{item.title!=\'separator\' ? \'\' : \'divider\'}}"><a href="#." ng-click="item.onClick($event)" ng-hide="item.title==\'separator\'">{{item.title}}</a></li></ul></div>'),e.put("directives/decorators/bootstrap/table/mos-color.html",'<div class="form-group {{form.htmlClass}} schema-form-select" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'schema-form-required\': form.inputrequired === true}" ng-show="showTitle()">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label><div class="joininputcol"><input colorpicker="" type="text" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" ng-model="$$value$$" ng-disabled="{{form.readonly}}" schema-validate="form"><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/mos-commit-info.html",'<div class="form-group {{form.htmlClass}}"><label class="control-label" ng-bind-html="form.title + \'：\'"></label><div class="joininputcol"><div class="list-group-item"><span ng-bind-html="JSON.stringify($$value$$)"></span><div class="form-group {{form.fieldHtmlClass}} schema-form-string" ng-repeat="item in $$value$$" ng-model="$$value$$"><span ng-if="item.isRequire" style="color: red;">*&nbsp;</span><label class="control-label" ng-bind-html="item.sciTitle + \'：\'"></label> <input ng-if="item.sciType && item.sciType.value == 0" ng-disabled="form.readonly" class="form-control" type="string" ng-model="item.srciValue"><select ng-if="item.sciType && item.sciType.value == 1" ng-model="item.srciValue" ng-model-options="form.ngModelOptions" sf-changed="form" ng-disabled="form.readonly" class="form-control ng-valid-schema-form ng-touched" schema-validate="form" name="noenum{{$index}}" ng-options="option.scoiNum as option.name for option in item.options"></select><div ng-if="item.sciType && item.sciType.value == 2"><div class="radio" ng-repeat="option in item.options"><label><input type="radio" class="" sf-changed="form" ng-disabled="form.readonly" ng-model="item.srciValue" ng-value="option.scoiNum" name="radios{{option.sciId}}"> <span ng-bind-html="option.name" class="ng-binding"></span></label></div></div><div ng-if="item.sciType && item.sciType.value == 3"><div class="checkbox" ng-repeat="option in item.options track by $index"><label><input type="checkbox" ng-disabled="form.readonly" sf-changed="form" ng-true-value="true" ng-false-value="false" class="ng-dirty ng-valid-parse ng-touched" ng-value="option.scoiNum" name="checkbox{{option.sciId}}" ng-model="option.srciValue"> <span ng-bind-html="option.name" class="ng-binding">a</span></label></div></div><textarea ng-if="item.sciType && item.sciType.value == 4" ng-disabled="form.readonly" ng-model="item.srciValue" class="form-control"></textarea></div></div></div></div>'),e.put("directives/decorators/bootstrap/table/mos-default.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle(), \'schema-form-required\': form.inputrequired === true}" for="{{form.key.slice(-1)[0]}}">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label><div class="joininputcol"><input ng-if="!form.fieldAddonLeft && !form.fieldAddonRight" ng-show="form.key && form.type!=\'label\'" type="{{form.input_type || form.type.replace(\'mos-\',\'\')}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="{{form.readonly}}" schema-validate="form" name="{{form.key.slice(-1)[0]}}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"> <span ng-if="!form.fieldAddonLeft && !form.fieldAddonRight" class="form-control {{form.fieldHtmlClass}}" ng-show="form.key && form.type==\'label\'">{{$$value$$}}</span><div ng-if="form.fieldAddonLeft || form.fieldAddonRight" ng-class="{\'input-group\': (form.fieldAddonLeft || form.fieldAddonRight)}"><span ng-if="form.fieldAddonLeft && !form.fieldAddonLeft.hasOwnProperty(\'type\')" class="input-group-addon {{form.fieldAddonLeft.htmlClass}}" ng-bind-html="form.fieldAddonLeft"></span> <span ng-if="form.fieldAddonLeft && form.fieldAddonLeft.hasOwnProperty(\'type\')" class="input-group-btn" ng-init="form.fieldAddonLeft[\'htmlClass\']=\'input-group-btn\'"><sf-decorator form="form.fieldAddonLeft"></sf-decorator></span> <input ng-show="form.key && form.type!=\'label\'" type="{{form.input_type || form.type.replace(\'mos-\',\'\')}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="{{form.readonly}}" schema-validate="form" name="{{form.key.slice(-1)[0]}}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"> <span class="form-control {{form.fieldHtmlClass}}" ng-show="form.key && form.type==\'label\'">{{$$value$$}}</span> <span ng-if="form.fieldAddonRight && !form.fieldAddonRight.hasOwnProperty(\'type\')" class="input-group-addon {{form.fieldAddonRight.htmlClass}}" ng-bind-html="form.fieldAddonRight"></span> <span ng-if="form.fieldAddonRight && form.fieldAddonRight.hasOwnProperty(\'type\')" class="input-group-btn" ng-init="form.fieldAddonRight[\'htmlClass\']=\'input-group-btn\'"><sf-decorator form="form.fieldAddonRight"></sf-decorator></span></div><span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-ok\': hasSuccess(), \'glyphicon-remove\': hasError() }" aria-hidden="true"></span> <span ng-if="hasError() || hasSuccess()" id="{{form.key.slice(-1)[0] + \'Status\'}}" class="sr-only">{{ hasSuccess() ? \'(success)\' : \'(error)\' }}</span><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/mos-multiselect.html",'<div class="form-group {{form.htmlClass}} schema-form-select" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'schema-form-required\': form.inputrequired === true}" ng-show="showTitle()">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label><div class="joininputcol"><div ng-dropdown-multiselect="" class="{{form.controlHtmlClass}}" ng-model-options="form.ngModelOptions" options="form.titleMap" ng-disabled="{{form.readonly}}" selected-model="$$value$$" translation-texts="form.selectText" group-by="{{form.groupField}}" extra-settings="form.map"></div><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/mos-multiselect2.html",'<div class="form-group {{form.htmlClass}} schema-form-select" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label ng-if="!form.notitle" class="control-label {{form.labelHtmlClass}}" ng-class="{\'schema-form-required\': form.inputrequired === true}" ng-show="showTitle()">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label><div class="joininputcol"><div ng-if="form.addDataOption" class="input-group"><ui-select multiple="" ng-model="$$value$$" theme="select2" ng-disabled="{{form.readonly}}" class="{{form.fieldHtmlClass}}" schema-validate="form" sf-changed="form"><ui-select-match placeholder="{{form.placeholder}}">{{$item[form.map.displayProp]}}</ui-select-match><ui-select-choices repeat="tmpitem in form.titleMap | propsFilter: form.filter1($select.search)" refresh="form.refreshData($select.search, form)" refresh-delay="500"><div ng-bind-html="tmpitem[form.map.displayProp] | highlight: $select.search"></div><small ng-if="form.map.moreitemname1"><span ng-bind-html="tmpitem[form.map.moreitemname1]" style="padding-right: 10px;"></span><span ng-if="form.map.moreitemname2" ng-bind-html="tmpitem[form.map.moreitemname2]"></span></small></ui-select-choices></ui-select><span class="input-group-btn"><button class="btn" ng-class="form.addDataOption.class" type="button" ng-click="form.addDataOption.cb($event,form)"><span class="icon-activities_icon_add" style="padding-right:5px;" ng-if="!form.addDataOption.title"></span>{{form.addDataOption.title||\'新增\'}}</button></span></div><ui-select ng-if="!form.addDataOption" multiple="" ng-model="$$value$$" theme="select2" ng-disabled="{{form.readonly}}" class="joininputcol {{form.fieldHtmlClass}}" schema-validate="form" sf-changed="form"><ui-select-match placeholder="{{form.placeholder}}">{{$item[form.map.displayProp]}}</ui-select-match><ui-select-choices repeat="tmpitem in form.titleMap | propsFilter: form.filter1($select.search)" refresh="form.refreshData($select.search, form)" refresh-delay="500"><div ng-bind-html="tmpitem[form.map.displayProp] | highlight: $select.search"></div><small ng-if="form.map.moreitemname1"><span ng-bind-html="tmpitem[form.map.moreitemname1]" style="padding-right: 10px;"></span><span ng-if="form.map.moreitemname2" ng-bind-html="tmpitem[form.map.moreitemname2]"></span></small></ui-select-choices></ui-select><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/mos-radio-buttons.html",'<div class="form-group schema-form-radiobuttons {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"><div><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'schema-form-required\': form.inputrequired === true}" ng-show="showTitle()">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label></div><div class="joininputcol"><div class="btn-group"><label class="btn {{ (item.value === $$value$$) ? form.style.selected || \'btn-default\' : form.style.unselected || \'btn-default\'; }}" ng-class="{ active: item.value === $$value$$ }" ng-repeat="item in form.titleMap"><input type="radio" class="{{form.fieldHtmlClass}}" sf-changed="form" style="display: none;" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" ng-value="item.value" name="{{form.key.join(\'.\')}}"> <span ng-bind-html="item.name"></span></label></div><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/mos-radios.html",'<div class="form-group schema-form-radiobuttons {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'schema-form-required\': form.inputrequired === true}" ng-show="showTitle()">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label><div class="joininputcol"><div class="radio"><label class="join-radio" ng-repeat="item in form.titleMap"><input type="radio" sf-changed="form" style="display: none;" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" ng-value="item.value" name="{{form.key.join(\'.\')}}"> <span ng-class="{\'icon-activities_icon_Radio\': item.value === $$value$$, \'icon-activities_icon_Radio_nor\': item.value !== $$value$$}"></span> <span ng-bind-html="item.name"></span> <span ng-if="item.label" class="join-radio-label" ng-bind-html="item.label"></span></label> <span ng-if="form.suggestlabel" ng-bind-html="form.suggestlabel"></span></div><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/mos-select.html",'<div class="form-group {{form.htmlClass}} schema-form-select" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'schema-form-required\': form.inputrequired === true}" ng-show="showTitle()">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label><div class="joininputcol"><select ng-model="$$value$$" ng-model-options="form.ngModelOptions" sf-changed="form" ng-disabled="{{form.readonly}}" class="form-control {{form.fieldHtmlClass}}" schema-validate="form" ng-options="item[form.map.value || \'value\'] as item[form.map.name || \'name\'] group by item.group for item in form.titleMap" name="{{form.key.slice(-1)[0]}}"><option value="">{{form.placeholder||\'请选择...\'}}</option></select><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/mos-select2.html",'<div class="form-group {{form.htmlClass}} schema-form-select" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"><label ng-if="!form.notitle" class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()" ng-class="{\'schema-form-required\': form.inputrequired === true}">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label><div class="joininputcol"><div ng-if="form.addDataOption" class="input-group"><ui-select ng-model="$$value$$" theme="bootstrap" ng-disabled="{{form.readonly}}" reset-search-input="false" class="{{form.fieldHtmlClass}}" schema-validate="form" sf-changed="form"><ui-select-match placeholder="{{form.placeholder}}">{{$select.selected[form.map.displayProp]}}</ui-select-match><ui-select-choices repeat="tmpitem in form.titleMap track by $index" refresh="form.refreshData($select.search, form)" refresh-delay="500"><div ng-bind-html="tmpitem[form.map.displayProp] | highlight: $select.search"></div><small ng-if="form.map.moreitemname1"><span ng-bind-html="tmpitem[form.map.moreitemname1]" style="padding-right: 10px;"></span><span ng-if="form.map.moreitemname2" ng-bind-html="tmpitem[form.map.moreitemname2]"></span></small></ui-select-choices></ui-select><span class="input-group-btn"><button class="btn" ng-class="form.addDataOption.class" type="button" ng-click="form.addDataOption.cb($event,form)"><span class="icon-activities_icon_add" style="padding-right:5px;" ng-if="!form.addDataOption.title"></span>{{form.addDataOption.title||\'新增\'}}</button></span></div><ui-select ng-if="!form.addDataOption" ng-model="$$value$$" theme="bootstrap" ng-disabled="{{form.readonly}}" reset-search-input="false" class="joininputcol {{form.fieldHtmlClass}}" schema-validate="form" sf-changed="form"><ui-select-match placeholder="{{form.placeholder}}">{{$select.selected[form.map.displayProp]}}</ui-select-match><ui-select-choices repeat="tmpitem in form.titleMap track by $index" refresh="form.refreshData($select.search, form)" refresh-delay="500"><div ng-bind-html="tmpitem[form.map.displayProp] | highlight: $select.search"></div><small ng-if="form.map.moreitemname1"><span ng-bind-html="tmpitem[form.map.moreitemname1]" style="padding-right: 10px;"></span><span ng-if="form.map.moreitemname2" ng-bind-html="tmpitem[form.map.moreitemname2]"></span></small></ui-select-choices></ui-select><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/mos-template.html",'<div class="{{form.htmlClass}}"><label class="{{form.fieldHtmlClass}}" ng-bind-html="form.title"></label> <label class="joininputcol" ng-class="form.labelHtmlClass" ng-bind-html="(form.formatterFn?form.formatterFn($$value$$):$$value$$)"></label></div>'),e.put("directives/decorators/bootstrap/table/mos-textarea.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle(), \'schema-form-required\': form.inputrequired === true}" for="{{form.key.slice(-1)[0]}}">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label><div class="joininputcol"><textarea sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="{{form.readonly}}" schema-validate="form" name="{{form.key.slice(-1)[0]}}"></textarea><div ng-if="form.fieldAddonLeft || form.fieldAddonRight" ng-class="{\'input-group\': (form.fieldAddonLeft || form.fieldAddonRight)}"><span ng-if="form.fieldAddonLeft && !form.fieldAddonLeft.hasOwnProperty(\'type\')" class="input-group-addon {{form.fieldAddonLeft.htmlClass}}" ng-bind-html="form.fieldAddonLeft"></span> <span ng-if="form.fieldAddonLeft && form.fieldAddonLeft.hasOwnProperty(\'type\')" class="input-group-btn" ng-init="form.fieldAddonLeft[\'htmlClass\']=\'input-group-btn\'"><sf-decorator form="form.fieldAddonLeft"></sf-decorator></span> <textarea sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="{{form.readonly}}" schema-validate="form" name="{{form.key.slice(-1)[0]}}"></textarea> <span ng-if="form.fieldAddonRight && !form.fieldAddonRight.hasOwnProperty(\'type\')" class="input-group-addon {{form.fieldAddonRight.htmlClass}}" ng-bind-html="form.fieldAddonRight"></span> <span ng-if="form.fieldAddonRight && form.fieldAddonRight.hasOwnProperty(\'type\')" class="input-group-btn" ng-init="form.fieldAddonRight[\'htmlClass\']=\'input-group-btn\'"><sf-decorator form="form.fieldAddonRight"></sf-decorator></span></div><span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-ok\': hasSuccess(), \'glyphicon-remove\': hasError() }" aria-hidden="true"></span> <span ng-if="hasError() || hasSuccess()" id="{{form.key.slice(-1)[0] + \'Status\'}}" class="sr-only">{{ hasSuccess() ? \'(success)\' : \'(error)\' }}</span><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/mos-tree-grid.html",'<tree-grid tree-data="$$value$$" col-defs="form.col_defs" expand-on="form.expanding_property" tree-control="form.control_tree" icon-leaf="{{form.iconLeaf ? form.iconLeaf : \'file icon\'}}" icon-expand="{{form.iconExpand ? form.iconExpand : \'plus icon\'}}" icon-collapse="{{form.iconCollapse ? form.iconCollapse : \'minus icon\'}}" on-select="form.gridtree_selecthandler(branch)" on-click="form.gridtree_clickhandler(branch)" expand-level="{{form.expandLevel?form.expandLevel:\'2\'}}"></tree-grid>'),e.put("directives/decorators/bootstrap/table/ngtree.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}" ng-bind-html="form.title"></label><div class="jstree" js-tree="form.options" sf-changed="form" schema-validate="form" ng-model="$$value$$" ng-model-options="form.ngModelOptions" should-apply="form.ignoreModelChanges()" tree="form.treeInstance" tree-events-obj="form.treeEventsObj"></div><span ng-if="hasError() || hasSuccess()" id="{{form.key.slice(-1)[0] + \'Status\'}}" class="sr-only">{{ hasSuccess() ? \'(success)\' : \'(error)\' }}</span><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/table/popover-tree.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}" ng-bind-html="form.title"></label><br><div class="btn-group"><button type="button" class="btn btn-default" ng-click="form.open(\'sm\', $$value$$, form)">{{form.name}}</button></div><span ng-if="hasError() || hasSuccess()" id="{{form.key.slice(-1)[0] + \'Status\'}}" class="sr-only">{{ hasSuccess() ? \'(success)\' : \'(error)\' }}</span><script type="text/ng-template" id="tree.html"><div class="modal-header"> <h3 class="modal-title" ng-bind-html="form.title"></h3> </div> <div class="modal-body"> <div class="help-block" sf-message="form.description"></div> <div js-tree="form.options" ng-model="items" should-apply="form.ignoreModelChanges()" tree="form.treeInstance" tree-events-obj="form.treeEventsObj"></div> </div> <div class="modal-footer"> <button class="btn btn-primary" type="button" ng-click="ok()">OK</button> <button class="btn btn-warning" type="button" ng-click="cancel()">Cancel</button> </div></script></div>'),e.put("directives/decorators/bootstrap/table/popover-user.html",'<style>\n  .popover{\n    min-width: 900px;\n    width: 900px;\n  }\n  .title-btn {\n    position: absolute;\n    right: 2px;\n    top: 2px;\n    padding: 7px 9px !important;\n    border-radius: 100px !important;\n  }\n  .popover-inner{\n    position: relative;\n  }\n</style><div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-init="form.options.resultKey=\'url\' ; form.options.progressKey=\'progress\' ; form.options.errorMsgKey=\'errorMsg\'"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}" ng-bind-html="form.title"></label><input ng-if="!form.fieldAddonLeft &amp;&amp; !form.fieldAddonRight" ng-show="form.key &amp;&amp; form.type!=\'label\'" type="string" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control ng-dirty" id="publisherId" ng-model-options="form.ngModelOptions" ng-model="model[form.key]" uib-popover-template="\'popoverTemplate.html\'" popover-title="{{form.option.title}}" popover-placement="{{form.option.placement}}" popover-trigger="none" popover-is-open="form.popoverIsOpen" ng-click="form.popoverIsOpen=!form.popoverIsOpen" ng-init="editmodel.assignfield=form.assignfield" style="background-color: white;" readonly="readonly" schema-validate="form" name="aniTitle" aria-describedby="aniTitleStatus"></div><script type="text/ng-template" id="popoverTemplate.html"><div ng-controller="popoverCtrl" id="popoverCtrl" onkeydown="stopEnterEvent(event)" onkeyup="stopEnterEvent(event)" onkeypress="stopEnterEvent(event)"> <button type="button" class="circular ui icon button title-btn" ng-click="form.popoverIsOpen=false"> <i class="fa fa-close"></i> </button> <div sf-schema="popoverschema" sf-form="popoverform" sf-model="model" ng-init="initParams(form)" sf-options="{ formDefaults: { disableSuccessState: true, feedback: false }}"></div> </div></script><script>\n  function popoverCtrl($scope, $http, Upload, $sce, $timeout) {\n    $scope.model = {search_key_type: [], selected: {}};\n    console.log("初始化idname" + JSON.stringify($scope.$parent.model) + "---------\\n" + $scope.$parent.model[$scope.$parent.editmodel.assignfield.id]);\n    $scope.model.selected.id = $scope.$parent.model[$scope.$parent.editmodel.assignfield.id] ? ($scope.$parent.model[$scope.$parent.editmodel.assignfield.id]+"").split(",") : [];\n    $scope.model.selected.name = $scope.$parent.model[$scope.$parent.editmodel.assignfield.name] ? $scope.$parent.model[$scope.$parent.editmodel.assignfield.name].split(",") : [];\n    $scope.model.selected.No = $scope.$parent.model[$scope.$parent.editmodel.assignfield.No] ? ($scope.$parent.model[$scope.$parent.editmodel.assignfield.No]+"").split(",") : [];\n    $scope.model.selected.phone = $scope.$parent.model[$scope.$parent.editmodel.assignfield.phone] ? ($scope.$parent.model[$scope.$parent.editmodel.assignfield.phone]+"").split(",") : [];\n    $scope.model.selected.uoiId = $scope.$parent.model[$scope.$parent.editmodel.assignfield.uoiId] ? ($scope.$parent.model[$scope.$parent.editmodel.assignfield.uoiId]+"").split(",") : [];\n    $scope.model.selected.uuiGrade = $scope.$parent.model[$scope.$parent.editmodel.assignfield.uuiGrade] ? ($scope.$parent.model[$scope.$parent.editmodel.assignfield.uuiGrade]+"").split(",") : [];\n\n    $scope.initParams =function(form){\n      $scope.model.multiselect=form.multiselect;\n      $scope.model.queryBy=form.option.queryBy;\n      $scope.model.criteria=form.option.criteria;\n    }\n    $scope.search_postdata = $.extend(GetUrlParsFun(), $scope.model);\n    $scope.popoverschema = {\n      type: "object",\n      title: "Comment",\n      properties: {\n        search_key_name: {"type": "string"}\n      },\n      required: []\n    };\n    $scope.popoverform = [\n      {\n        type: "section",\n        items: [\n          {\n            key: "search_key_name",\n            htmlClass: "pull-left col-xs-6 col-sm-4 col-md-3 col-lg-2 no-padding-type",// form-group-sm",\n            fieldHtmlClass: "ht-addon-left",\n            type: \'text\',\n            notitle: true,\n            placeholder: "输入关键字..."\n          },\n          {\n            type: \'button\',\n            htmlClass: "pull-left btn-margin-right",\n            icon: "glyphicon glyphicon-search",\n            style: "btn-info ht-addon-right",\n            title: \'搜索\',\n            onClick: function () {\n              $scope.search_postdata[\'offset\'] = 0;\n              $(\'#popover_tbl_datapage_list\').bootstrapTable(\'selectPage\', 1);\n            }\n          }\n        ]\n      },\n      {\n        type: "template",\n        template: \'<table id="popover_tbl_datapage_list" ng-init="form.foo()"></table>\',\n        name: \'popover_tbl_datapage_list\',\n        foo: function () {\n          $(\'#popover_tbl_datapage_list\').bootstrapTable({\n            method: \'post\',\n            contentType: \'application/x-www-form-urlencoded;charset=UTF-8\',\n            url: \'/api/sysuserinfo/getList\',\n            cache: false,\n            responseHandler: function (res) {\n              console.log("用户数据：" + JSON.stringify(res));\n              return {\n                rows: (res && res.data && res.data.queryData && res.data.queryData.length > 0) ? res.data.queryData : [],\n                total: (res && res.data && res.data.totalCnt) ? res.data.totalCnt : 0,\n                pageNumber: (res && res.data && res.data.page) ? res.data.page : 1\n              };\n            },\n            queryParams: function (p) {\n              $scope.search_postdata["limit"] = _.parseInt(p[\'limit\']);\n              $scope.search_postdata["is_page"] = 1;\n              $scope.search_postdata.search_key_name = $scope.model.search_key_name;\n              var search_postdata = angular.copy($scope.search_postdata);\n              console.log("搜索参数：" + JSON.stringify(search_postdata) + JSON.stringify($scope.model));\n              if (_.isUndefined(search_postdata.offset))\n                search_postdata[\'offset\'] = p[\'offset\'];\n              else\n                delete $scope.search_postdata.offset;\n              $scope.search_postdata[\'page\'] = _.parseInt(_.parseInt(search_postdata[\'offset\']) / _.parseInt(search_postdata[\'limit\'])) + 1;\n              search_postdata[\'page\'] = $scope.search_postdata[\'page\'];\n              ArrayObjectToIntData(search_postdata);\n              console.log(JSON.stringify($scope.$parent.model));\n              if($scope.$parent.model && $scope.$parent.model.abiId && ($scope.$parent.model.abiId.id || $scope.$parent.model.abiId.id ==0)\n                && $scope.model.queryBy == "abiId"){\n                search_postdata.abiId = $scope.$parent.model.abiId.id;\n              }\n              if($scope.model.criteria){\n                _.extend(search_postdata, $scope.model.criteria);\n              }\n              return search_postdata;\n            },\n            striped: true,\n            pagination: true,\n            sortName: \'sortno\',\n            sortOrder: \'desc\',\n            pageSize: 5,\n            locale: \'zh-CN\',\n            search: false,\n            clickToSelect: true,\n            onCheck: function (row) {\n              var uoiId = row.uoiId ? row.uoiId.id : ""\n              $scope.btnSelectUser(row.id, row.uuiName, row.gradeCode, row.uuiMobile || row.loginName, uoiId, row.uuiGrade);\n            },\n            onUncheck: function (row) {\n              var uoiId = row.uoiId ? row.uoiId.id : ""\n              $scope.btnSelectUser(row.id, row.uuiName, row.gradeCode, row.uuiMobile || row.loginName, uoiId, row.uuiGrade);\n            },\n            onCheckAll: function (rows) {\n              return false;\n            },\n            onUncheckAll: function (rows) {\n              return false;\n            },\n            queryParamsType: \'limit\',\n            sidePagination: "server",\n            smartDisplay: true,\n            checkboxHeader: false,\n            undefinedText: \'-\',\n            searchOnEnterKey: false,\n            minimumCountColumns: 1000,\n            selectItemName: "选择",\n            columns: [\n              {\n                radio: true,\n                align: \'center\',\n                valign: \'top\',\n                title: "选择",\n                visible: !$scope.model.multiselect ? true : false,\n                class: \'column_class\',\n                formatter: function (value, row, index) {\n                  if ($.inArray(row.id+"", $scope.model.selected.id) > -1) {\n                    return {checked: true}\n                  }\n                  return value;\n                }\n              },\n              {\n                checkbox: true,\n                align: \'center\',\n                valign: \'top\',\n                title: "选择",\n                visible: $scope.model.multiselect ? true : false,\n                class: \'column_class\',\n                formatter: function (value, row, index) {\n                  if ($scope.model.multiselect && $.inArray(row.id+"", $scope.model.selected.id) > -1) {\n                    return {checked: true}\n                  }\n                  return value;\n                }\n              },\n              {\n                field: \'uuiNum\',\n                title: \'序号\',\n                align: \'center\',\n                valign: \'top\',\n                visible: true,\n                class: \'column_class\',\n                formatter: function (value, row, index) {\n                  return _.toString((_.parseInt($scope.search_postdata[\'page\']) - 1) * _.parseInt($scope.search_postdata[\'limit\']) + 1 + index);\n                }\n              },\n              {\n                field: \'uoiId\',\n                title: \'隶属院系\',\n                align: \'center\',\n                valign: \'top\',\n                sortable: false,\n                visible: true,\n                class: \'column_class\',\n                formatter: function (value, row, index) {\n                  if (!_.isUndefined(value) && _.isObject(row["uoiId"])) {\n                    return row["uoiId"].fullName;\n                  }\n                  return "&nbsp;";\n                }\n              },\n              /*{\n                field: \'uuiGrade\',\n                title: \'年级\',\n                align: \'left\',\n                valign: \'top\',\n                sortable: false,\n                visible: true,\n                class: \'column_class\'\n              },*/\n              {\n                field: \'uuiName\',\n                title: \'姓名\',\n                align: \'left\',\n                valign: \'top\',\n                sortable: false,\n                visible: true,\n                class: \'column_class\'\n              },\n              {\n                field: \'gradeCode\',\n                title: \'学号\',\n                align: \'left\',\n                valign: \'top\',\n                sortable: false,\n                visible: true,\n                class: \'column_class\'\n              },\n              {\n                field: \'uuiMobile\',\n                title: \'手机号\',\n                align: \'left\',\n                valign: \'top\',\n                sortable: false,\n                visible: true,\n                class: \'column_class\'\n              },\n              {\n                field: \'uuiIdcard\',\n                title: \'身份证号码\',\n                align: \'left\',\n                valign: \'top\',\n                sortable: false,\n                visible: true,\n                class: \'column_class\'\n              },\n              {\n                field: \'uuiSex\',\n                title: \'性别\',\n                align: \'center\',\n                valign: \'top\',\n                sortable: false,\n                visible: true,\n                class: \'column_class\',\n                formatter: function (value, row, index) {\n                  if (value == 0 ) {\n                    return "女";\n                  } else if(value == 1){\n                    return "男";\n                  }\n                  return "&nbsp;";\n                }\n              },\n              {\n                field: \'uuiType\',\n                title: \'用户类型\',\n                align: \'center\',\n                valign: \'top\',\n                sortable: true,\n                visible: true,\n                class: \'column_class\',\n                formatter: function (value, row, index) {\n                  if (value == 0 ) {\n                    return "默认用户";\n                  } else if(value == 1){\n                    return "老师";\n                  } else if(value == 2){\n                    return "学生";\n                  }\n                  return "&nbsp;";\n                }\n              },\n              /*{\n                title: \'是否选取\',\n                align: \'center\',\n                valign: \'middle\',\n                visible: true,\n                class: \'column_class\',\n                formatter: function (value, row, index) {\n                  console.log("格式化"+JSON.stringify(row.uoiId) + row.uoiId + "\\n" + JSON.stringify($scope.model.selected));\n                  var uoiId = row.uoiId ? row.uoiId.id : ""\n                  if ($.inArray(row.id+"", $scope.model.selected.id) > -1) {\n                    return \'<a href="javascript:void(0)" class="flag_\' + row.id +\'" onclick="btnSelectUser(this, \' + row.id\n                      + \',\\\'\' + row.uuiName + \'\\\',\\\'\' + row.gradeCode + \'\\\',\\\'\' + row.uuiMobile + \'\\\',\\\'\' + uoiId\n                      + \'\\\',\\\'\' + row.uuiGrade + \'\\\')">取消</a>\';\n                  }\n                  return \'<a href="javascript:void(0)" class="flag_\' + row.id +\'" onclick="btnSelectUser(this, \' + row.id\n                    + \',\\\'\' + row.uuiName + \'\\\',\\\'\' + row.gradeCode + \'\\\',\\\'\' + row.uuiMobile + \'\\\',\\\'\' + uoiId\n                    + \'\\\',\\\'\' + row.uuiGrade + \'\\\')">选取</a>\';\n                }\n              }*/\n            ]\n          });\n          $(window).resize(function () {\n            $(\'#popover_tbl_datapage_list\').bootstrapTable(\'resetView\');\n          });\n        }\n      }\n    ];\n    /*\n     * 数组删除某元素\n     * */\n    Array.prototype.remove = function (index) {\n      for (var i = 0; i < this.length; i++) {\n        if (i == index) {\n          this.splice(i, 1);\n          break;\n          console.log("删除元素" + obj + "数组" + this);\n        }\n      }\n    }\n    //选择用户\n    $scope.btnSelectUser = function (id, name, No, phone, uoiId, uuiGrade) {\n      console.log("选择用户\\n" + "uoiId" + JSON.stringify(uoiId));\n      var isSelected = false;\n      var arrIndex = $.inArray(id+"", $scope.model.selected.id);\n      if(!$scope.model.multiselect && $scope.model.selected.id == id)\n        return;\n      if(arrIndex > -1){\n        $scope.model.selected.id.remove(arrIndex);\n        $scope.model.selected.name.remove(arrIndex);\n        $scope.model.selected.No.remove(arrIndex);\n        $scope.model.selected.phone.remove(arrIndex);\n        $scope.model.selected.uoiId.remove(arrIndex);\n        $scope.model.selected.uuiGrade.remove(arrIndex);\n//        $(opt).html("选取");\n      } else {\n        if($scope.model.selected.id.length > 0 && !$scope.model.multiselect){\n          var tmpIndex = $.inArray($scope.$parent.model[$scope.$parent.editmodel.assignfield.id]+"", $scope.model.selected.id);\n//          $(".flag_" + $scope.$parent.model[$scope.$parent.editmodel.assignfield.id]).html("选取");\n          $scope.model.selected.id.remove(tmpIndex);\n          $scope.model.selected.name.remove(tmpIndex);\n          $scope.model.selected.No.remove(tmpIndex);\n          $scope.model.selected.phone.remove(tmpIndex);\n          $scope.model.selected.uoiId.remove(tmpIndex);\n          $scope.model.selected.uuiGrade.remove(tmpIndex);\n        }\n        $scope.model.selected.id.push(id+"");\n        $scope.model.selected.name.push(name);\n        $scope.model.selected.No.push(No);\n        $scope.model.selected.phone.push(phone);\n        $scope.model.selected.uoiId.push(uoiId);\n        $scope.model.selected.uuiGrade.push(uuiGrade);\n//        $(opt).html("取消");\n      }\n//      console.log($scope.model.multiselect+"\\n\\n");\n//      if($scope.$parent.model[$scope.$parent.editmodel.assignfield.id] == id)\n//        $(opt).html("取消");\n//        return;\n//      if($scope.$parent.model[$scope.$parent.editmodel.assignfield.id]){\n//        $(".flag_" + $scope.$parent.model[$scope.$parent.editmodel.assignfield.id]).html("选取");\n//      }\n//      $(opt).html("取消");\n      $timeout(function () {\n        if ($scope.$parent.editmodel.assignfield.id)\n          $scope.$parent.model[$scope.$parent.editmodel.assignfield.id] = $scope.model.selected.id.toString();\n        if ($scope.$parent.editmodel.assignfield.name)\n          $scope.$parent.model[$scope.$parent.editmodel.assignfield.name] = $scope.model.selected.name.toString();\n        if ($scope.$parent.editmodel.assignfield.No)\n          $scope.$parent.model[$scope.$parent.editmodel.assignfield.No] = $scope.model.selected.No.toString();\n        if ($scope.$parent.editmodel.assignfield.phone)\n          $scope.$parent.model[$scope.$parent.editmodel.assignfield.phone] = $scope.model.selected.phone.toString();\n        if ($scope.$parent.editmodel.assignfield.uoiId)\n          $scope.$parent.model[$scope.$parent.editmodel.assignfield.uoiId] = $scope.model.selected.uoiId.toString();\n        if ($scope.$parent.editmodel.assignfield.uuiGrade)\n          $scope.$parent.model[$scope.$parent.editmodel.assignfield.uuiGrade] = $scope.model.selected.uuiGrade.toString();\n        console.log("用户信息" + JSON.stringify($scope.$parent.model) + id + "--" + name + "--" + No + "--" + phone + "--" + uoiId + "--" + uuiGrade);\n      });\n    }\n  }\n  //绑定选取用户方法\n  function btnSelectUser(opt, id, uuiName, gradeCode, uuiMobile, uoiId, uuiGrade) {\n    var tmpFn = GetAngularFun(\'#popoverCtrl\', \'btnSelectUser\');\n    tmpFn(opt, id, uuiName, gradeCode, uuiMobile, uoiId, uuiGrade);\n  }\n</script>'),
e.put("directives/decorators/bootstrap/table/table-title.html",'<div sf-array="form" class="form-group {{form.htmlClass}}" style="clear: both" ng-model="$$value$$" ng-model-options="form.ngModelOptions"><button ng-click="form.add()" type="button" class="btn btn-success pull-right" style="margin-bottom:20px;margin-left: 10px" ng-init="(!$$value$$ || $$value$$.length == 0 ) && form.add()"><i class="glyphicon glyphicon-plus"></i> 增加{{form.title}}</button> <button ng-show="form.actionTitle" ng-click="form.action()" type="button" class="btn btn-success pull-right" style="margin-bottom:20px">{{form.actionTitle}} <i class="glyphicon glyphicon-chevron-right"></i></button><h3>{{form.title}}</h3></div>'),e.put("directives/decorators/bootstrap/table/table.html",'<div ng-class="form.htmlClass" style="clear: both" ng-model="$$value$$" ng-model-options="form.ngModelOptions"><div class="ng-table-toolbar" ng-if="!form.hideTopToggle"><div id="toolbar_btnoption_list" class="pull-left btn-group ng-scope"><button ng-repeat="btn in form.toolbar" class="btn btn-default" ng-class="btn.htmlClass" type="button" ng-if="btn.condition ? btn.condition() : true" ng-click="btn.action();"><i ng-if="btn.icon" ng-class="btn.icon"></i> {{btn.name}}</button></div><div class="columns columns-right btn-group pull-right"><button class="btn btn-default" type="button" name="refresh" title="刷新" ng-click="form.tableParams.reload()"><i class="refresh icon"></i></button> <button ng-if="form.showToggle" class="btn btn-default" ng-click="form.toggleView=!form.toggleView" type="button" name="toggle" title="切换"><i class="browser icon"></i></button><div class="keep-open btn-group" title="列"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><i class="grid layout icon"></i> <span class="caret"></span></button><ul class="dropdown-menu" role="menu"><li ng-repeat="col in form.items"><label><input type="checkbox" ng-model="col.show"> {{col.title}}</label></li></ul></div><div class="export btn-group"><button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button" aria-expanded="false"><i class="cloud download icon"></i> <span class="caret"></span></button><ul class="dropdown-menu export-table" role="menu"><li><a title="excel" href="javascript:void(0)">MS-Excel</a></li><li><a title="csv" href="javascript:void(0)">CSV</a></li><li><a title="png" href="javascript:void(0)">PNG</a></li><li><a title="doc" href="javascript:void(0)">MS-Word</a></li></ul></div></div></div><div class="table-responsive"><table table-scroll-plug="" ng-table-dynamic="form.tableParams with form.items" template-pagination="customPagination.html" class="table table-hover" ng-init="form.tableParams.settings({dataset: $$value$$ });"><tr ng-repeat="row in $data"><td ng-repeat="col in $columns" ng-switch="col.type" ng-style="col.style" header="\'headerCheckbox.html\'"><div ng-switch-when="checkRow" ng-class="col.fieldClass"><input type="checkbox" ng-model="row[\'selected\']" ng-click="form.selectOne($event)"></div><div ng-switch-when="radioRow" ng-class="col.fieldClass"><input type="radio" ng-model="form[\'selected\']" ng-value="row"></div><div ng-switch-when="serial" ng-class="col.fieldClass" ng-bind-html="$data.indexOf(row)+1+(params.count()*(params.page()-1))"></div><div ng-switch-when="txt" ng-class="col.fieldClass" ng-bind-html="col.formatter ? col.formatter(row[col.field], row, $index) : row[col.field]"></div><div ng-switch-when="actionLink" ng-class="col.fieldClass"><a href="javascript:;" ng-click="col.action(this, row)" ng-bind-html="col.formatter ? col.formatter(row[col.field], row, $index) : row[col.field]"></a></div><button ng-switch-when="button" type="button" class="btn" ng-class="col.fieldClass" ng-click="col.action(this, row)"><span ng-if="col.iconClass" class="glyphicon" ng-class="col.iconClass"></span> <span ng-bind-html="col.text"></span></button><div ng-switch-when="buttons" ng-class="col.fieldClass"><button ng-repeat="colBtn in col.items" type="button" class="btn" ng-class="colBtn.fieldClass" ng-click="colBtn.action(this, row)"><span ng-if="colBtn.iconClass" class="glyphicon" ng-class="colBtn.iconClass"></span> <span ng-bind-html="colBtn.text"></span></button></div><div ng-switch-default="">该列类型未开发。。。</div></td></tr><tr ng-if="$data && $data.length == 0"><td class="schema-table-nodata" ng-attr-colspan="{{$columns.length}}">暂无该类数据</td></tr></table></div><script type="text/ng-template" id="customPagination.html"><div class="ng-cloak ng-table-pager" ng-if="!params.settings().showPageListInfo && params.data.length" style="display: inline-block;width: 100%; margin-bottom: 5px; clear: both;"> <ul ng-if="pages.length" class="pagination ng-table-pagination pull-left"> <li ng-repeat="page in pages" ng-class="{\'disabled\': !page.active && !page.current, \'active\': page.current}" ng-switch="page.type"> <a ng-switch-when="prev" ng-click="params.page(page.number)" href="">&lsaquo;</a> <a ng-switch-when="first" ng-click="params.page(page.number)" href=""> <span ng-bind="page.number"></span> </a> <a ng-switch-when="page" ng-click="params.page(page.number)" href=""> <span ng-bind="page.number"></span> </a> <a ng-switch-when="more" ng-click="params.page(page.number)" href="">&#8230;</a> <a ng-switch-when="last" ng-click="params.page(page.number)" href=""> <span ng-bind="page.number"></span> </a> <a ng-switch-when="next" ng-click="params.page(page.number)" href="">&rsaquo;</a> </li> </ul> <div class="pull-right"> <span style="margin-left:5px; line-height: 32px;vertical-align: top;">共{{params.settings().total}}条记录，第{{params.page()}}/{{(params.settings().total / params.count()) | ceil}}页</span> <div ng-if="params.settings().counts.length" class="ng-table-counts btn-group"> <select class="form-control" ng-model="params.count" ng-model-options="{ getterSetter: true }" ng-options="count for count in params.settings().counts"> </select> </div> </div> </div></script><script type="text/ng-template" id="headerCheckbox.html"><input type="checkbox" ng-model="form.checkedAll" class="select-all" ng-click="form.selectAll($event)" /></script></div>'),e.put("directives/decorators/bootstrap/table/uploadfile.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-init="form.options.resultKey=\'url\' ; form.options.progressKey=\'progress\' ; form.options.errorMsgKey=\'errorMsg\'" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle(), \'schema-form-required\': form.inputrequired === true}" for="{{form.key.slice(-1)[0]}}">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label><div class="joininputcol" ng-class="form.fieldHtmlClass"><div class="uploadfilebody"><a class="uploadfilecls" ng-if="form.options.showThumb" href="{{$$value$$}}" target="_blank">{{$$value$$.substring($$value$$.lastIndexOf(\'/\')+1)}}</a> <a class="btn btn-success uploadfilebuttom" ngf-select="" ngf-change="form.options.uploadPic($file, form.options, arrayIndex)" ngf-fix-orientation="true" ngf-validate="form.options.uploadvalidate?form.options.uploadvalidate:{size: {max: \'20MB\', min: \'10B\'}}" ng-class="form.class" tabindex="-1"><span ng-if="!$file[form.options.resultKey]">上传文件</span> <span class="file-progress" ng-if="!$file[form.options.resultKey]" ng-show="$file[form.options.progressKey] >= 0"><span style="width:{{$file[form.options.progressKey]}}%" ng-bind="$file[form.options.progressKey] + \'%\'"></span></span> <span ng-show="$file[form.options.resultKey]">上传成功</span></a><br ng-if="form.options.suggestBottom"><span class="uploadfilelabel" ng-if="form.options.suggestlabel" ng-style="{\'padding-left\': (form.options.suggestBottom? \'0px\' : \'10px\')}" ng-bind="form.options.suggestlabel"></span></div><span ng-if="$file[form.options.errorMsgKey]" class="sr-only">错误: {{$file[form.options.errorMsgKey]}}</span><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/uploadfiles.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-init="form.options.resultKey=\'url\' ; form.options.progressKey=\'progress\' ; form.options.errorMsgKey=\'errorMsg\'" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle(), \'schema-form-required\': form.inputrequired === true}" for="{{form.key.slice(-1)[0]}}">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label><div class="joininputcol" ng-class="form.fieldHtmlClass"><div class="uploadfilesbody"><div class="uploadfilescls" ng-repeat="f in $$value$$ track by $index"><span ng-if="$files[$index][form.options.errorMsgKey]" class="sr-only">错误: {{$files[$index][form.options.errorMsgKey]}}</span> <a ng-if="form.options.showThumb" href="{{f}}" target="_blank">{{f.substring(f.lastIndexOf(\'/\')+1)}}</a> <span class="file-progress" ng-show="$files[$index][form.options.progressKey] >= 0"><div style="width:{{$files[$index][form.options.progressKey]}}%" ng-bind="$files[$index][form.options.progressKey] + \'%\'"></div></span><div ng-show="f" class="glyphicon glyphicon-remove-sign file-del" ng-click="form.options.deleteFn($$value$$, f)"></div></div><a ng-if="form.options.maxNum ? form.options.maxNum > $$value$$.length : true" ngf-multiple="true" class="btn btn-success uploadfilesbuttom" ngf-select="" ngf-change="form.options.uploadPics($files, form.options, $$value$$)" ngf-fix-orientation="true" ngf-validate="form.options.uploadvalidate?form.options.uploadvalidate:{size: {max: \'20MB\', min: \'10B\'}}" ng-class="form.class" tabindex="-1"><span>批量上传</span></a><br ng-if="form.options.suggestBottom"><span class="uploadfileslabel" ng-if="form.options.suggestlabel" ng-style="{\'padding-left\': (form.options.suggestBottom? \'0px\' : \'10px\')}" ng-bind="form.options.suggestlabel"></span></div><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/uploadpic.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-init="form.options.resultKey=\'url\' ; form.options.progressKey=\'progress\' ; form.options.errorMsgKey=\'errorMsg\'" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle(), \'schema-form-required\': form.inputrequired === true}" for="{{form.key.slice(-1)[0]}}">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label><div class="joininputcol" ng-class="form.fieldHtmlClass"><a ng-if="form.options.showThumb" href="{{$$value$$}}" target="_blank"><img ng-if="form.options.showThumb" ngf-src="$$value$$" height="{{form.options.thumbSize}}" width="{{form.options.thumbSize}}" style="margin-bottom: 10px" class="thumb"></a><br><a class="btn btn-success" ngf-select="" ngf-change="form.options.uploadPic($file, form.options, arrayIndex, $newFiles, $duplicateFiles, $invalidFiles, $event)" ngf-fix-orientation="true" ngf-validate="form.options.uploadvalidate" ngf-resize="{width: (form.options.resizewidth?form.options.resizewidth:960), quality: 0.8, type: \'image/jpeg\'}" ngf-resize-if="$width > (form.options.resizewidth?form.options.resizewidth:960) || $height > (form.options.resizewidth?form.options.resizewidth:960)" ng-class="form.class" tabindex="-1"><span ng-if="!$file[form.options.resultKey]">上传图片</span> <span class="file-progress" ng-if="!$file[form.options.resultKey]" ng-show="$file[form.options.progressKey] >= 0"><span style="width:{{$file[form.options.progressKey]}}%" ng-bind="$file[form.options.progressKey] + \'%\'"></span></span> <span ng-show="$file[form.options.resultKey]">上传成功</span></a><br ng-if="form.options.suggestBottom"><span ng-if="form.options.suggestlabel" ng-style="{\'padding-left\': (form.options.suggestBottom? \'0px\' : \'10px\')}" ng-bind="form.options.suggestlabel"></span> <span ng-if="$file[form.options.errorMsgKey]" class="sr-only">错误: {{$file[form.options.errorMsgKey]}}</span><div class="help-block" sf-message="form.description"></div></div></div>'),e.put("directives/decorators/bootstrap/table/uploadpics.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-init="form.options.resultKey=\'url\' ; form.options.progressKey=\'progress\' ; form.options.errorMsgKey=\'errorMsg\'" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle(), \'schema-form-required\': form.inputrequired === true}" for="{{form.key.slice(-1)[0]}}">{{form.title}}<span ng-if="form.inputrequired === true" class="join-required"></span></label><div class="joininputcol" ng-class="form.fieldHtmlClass"><div ng-repeat="f in $$value$$ track by $index"><span ng-if="$files[$index][form.options.errorMsgKey]" class="sr-only">错误: {{$files[$index][form.options.errorMsgKey]}}</span> <a ng-if="form.options.showThumb" href="{{f}}" target="_blank"><img ngf-src="f" height="{{form.options.thumbSize}}px" width="{{form.options.thumbSize}}px" style="margin-bottom: 2px" class="thumb"></a> <span class="file-progress" ng-show="$files[$index][form.options.progressKey] >= 0"><div style="width:{{$files[$index][form.options.progressKey]}}%" ng-bind="$files[$index][form.options.progressKey] + \'%\'"></div></span><div ng-show="f" class="glyphicon glyphicon-remove-sign file-del" ng-click="form.options.deleteFn($$value$$, f)"></div></div><a ngf-multiple="true" class="btn btn-success" ngf-select="" ngf-change="form.options.uploadPics($files, form.options, $$value$$, $newFiles, $duplicateFiles, $invalidFiles, $event)" ng-init="form.options.init($files, $$value$$);" ngf-fix-orientation="true" ngf-validate="form.options.uploadvalidate" ngf-resize="{width: (form.options.resizewidth?form.options.resizewidth:960), quality: 0.8, type: \'image/jpeg\', restoreExif: true}" ngf-resize-if="$width > (form.options.resizewidth?form.options.resizewidth:960) || $height > (form.options.resizewidth?form.options.resizewidth:960)" ng-class="form.class" tabindex="-1"><span>批量上传</span></a><br ng-if="form.options.suggestBottom"><span ng-if="form.options.suggestlabel" ng-style="{\'padding-left\': (form.options.suggestBottom? \'0px\' : \'10px\')}" ng-bind="form.options.suggestlabel"></span><div class="help-block" sf-message="form.description"></div></div></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,o,t){var s="directives/decorators/bootstrap/table/",r=function(o,s,r){if("array"===s.type&&"table"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="table",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(r),o.addMapping("bootstrapDecorator","table",s+"table.html"),o.createDirective("table",s+"table.html");var a=function(o,s,r){if("array"===s.type&&"table-title"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="table-title",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(a),o.addMapping("bootstrapDecorator","table-title",s+"table-title.html"),o.createDirective("table-title",s+"table-title.html");var l=function(o,s,r){if("default"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="default",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(l),o.addMapping("bootstrapDecorator","default",s+"mos-default.html"),o.createDirective("default",s+"mos-default.html");var i=function(o,s,r){if("multi-select"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="multi-select",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(i),o.addMapping("bootstrapDecorator","multi-select",s+"mos-multiselect.html"),o.createDirective("multi-select",s+"mos-multiselect.html");var n=function(o,s,r){if("button-group"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="button-group",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(n),o.addMapping("bootstrapDecorator","button-group",s+"mos-button-group.html"),o.createDirective("button-group",s+"mos-button-group.html");var m=function(o,s,r){if("mos-array"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="mos-array",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(m),o.addMapping("bootstrapDecorator","mos-array",s+"mos-array.html"),o.createDirective("mos-array",s+"mos-array.html");var d=function(o,s,r){if("mos-color"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="mos-color",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(d),o.addMapping("bootstrapDecorator","mos-color",s+"mos-color.html"),o.createDirective("mos-color",s+"mos-color.html");var c=function(o,s,r){if("mos-textarea"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="mos-textarea",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(c),o.addMapping("bootstrapDecorator","mos-textarea",s+"mos-textarea.html"),o.createDirective("mos-textarea",s+"mos-textarea.html");var p=function(o,s,r){if("mos-select2"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="mos-select2",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(p),o.addMapping("bootstrapDecorator","mos-select2",s+"mos-select2.html"),o.createDirective("mos-select2",s+"mos-select2.html");var f=function(o,s,r){if("mos-multiselect2"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="mos-multiselect2",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(f),o.addMapping("bootstrapDecorator","mos-multiselect2",s+"mos-multiselect2.html"),o.createDirective("mos-multiselect2",s+"mos-multiselect2.html");var u=function(o,s,r){if("mos-template"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="mos-template",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(u),o.addMapping("bootstrapDecorator","mos-template","directives/decorators/bootstrap/table/mos-template.html"),o.createDirective("mos-template","directives/decorators/bootstrap/table/mos-template.html");var g=function(o,s,r){if("uploadpic"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="uploadpic",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(g),o.addMapping("bootstrapDecorator","uploadpic",s+"uploadpic.html"),o.createDirective("uploadpic",s+"uploadpic.html");var h=function(o,s,r){if("uploadpics"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="uploadpics",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(h),o.addMapping("bootstrapDecorator","uploadpics",s+"uploadpics.html"),o.createDirective("uploadpics",s+"uploadpics.html");var b=function(o,s,r){if("cutuploadpic"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="cutuploadpic",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(b),o.addMapping("bootstrapDecorator","cutuploadpic",s+"cutuploadpic.html"),o.createDirective("cutuploadpic",s+"cutuploadpic.html");var v=function(o,s,r){if("cutuploadpics"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="cutuploadpics",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(v),o.addMapping("bootstrapDecorator","cutuploadpics",s+"cutuploadpics.html"),o.createDirective("cutuploadpics",s+"cutuploadpics.html");var $=function(o,s,r){if("uploadfile"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="uploadfile",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift($),o.addMapping("bootstrapDecorator","uploadfile",s+"uploadfile.html"),o.createDirective("uploadfile",s+"uploadfile.html");var y=function(o,s,r){if("uploadfiles"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="uploadfiles",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(y),o.addMapping("bootstrapDecorator","uploadfiles",s+"uploadfiles.html"),o.createDirective("uploadfiles",s+"uploadfiles.html");var k=function(o,s,r){if("ckeditor"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="ckeditor",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(k),o.addMapping("bootstrapDecorator","ckeditor",s+"ckeditor.html"),o.createDirective("ckeditor",s+"ckeditor.html");var w=function(o,s,r){if("ngtree"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="ngtree",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(w),o.addMapping("bootstrapDecorator","ngtree",s+"ngtree.html"),o.createDirective("ngtree",s+"ngtree.html");var x=function(o,s,r){if("popover-tree"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="popover-tree",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(x),o.addMapping("bootstrapDecorator","popover-tree",s+"popover-tree.html"),o.createDirective("popover-tree",s+"popover-tree.html");var S=function(o,s,r){if("date-range"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="date-range",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(S),o.addMapping("bootstrapDecorator","date-range",s+"date-range.html"),o.createDirective("date-range",s+"date-range.html");var C=function(o,s,r){if("mos-radio-buttons"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="mos-radio-buttons",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(C),o.addMapping("bootstrapDecorator","mos-radio-buttons",s+"mos-radio-buttons.html"),o.createDirective("mos-radio-buttons",s+"mos-radio-buttons.html");var _=function(o,s,r){if("popoverUser"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="popoverUser",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(_),o.addMapping("bootstrapDecorator","popoverUser",s+"popover-user.html"),o.createDirective("popoverUser",s+"popover-user.html");var j=function(o,s,r){if("mos-commit-info"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="mos-commit-info",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(j),o.addMapping("bootstrapDecorator","mos-commit-info",s+"mos-commit-info.html"),o.createDirective("mos-commit-info",s+"mos-commit-info.html");var O=function(o,s,r){if("mos-tree-grid"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="mos-tree-grid",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(O),o.addMapping("bootstrapDecorator","mos-tree-grid",s+"mos-tree-grid.html"),o.createDirective("mos-tree-grid",s+"mos-tree-grid.html");var M=function(o,s,r){if("mos-radios"===s.format){var a=e.stdFormObj(o,s,r);return a.key=r.path,a.type="mos-radios",r.lookup[t.stringify(r.path)]=a,a}};e.defaults.string.unshift(M),o.addMapping("bootstrapDecorator","mos-radios",s+"mos-radios.html"),o.createDirective("mos-radios",s+"mos-radios.html"),o.createDirectives({"mos-number":s+"mos-default.html",text:s+"mos-default.html",date:s+"mos-default.html",password:s+"mos-default.html",input:s+"mos-default.html","multi-select":s+"mos-multiselect.html","table-title":s+"table-title.html",table:s+"table.html","button-group":s+"mos-button-group.html","mos-array":s+"mos-array.html","mos-color":s+"mos-color.html","mos-textarea":s+"mos-textarea.html","mos-commit-info":s+"mos-commit-info.html","mos-select2":s+"mos-select2.html","mos-multiselect2":s+"mos-multiselect2.html","mos-template":s+"mos-template.html",uploadpic:s+"uploadpic.html",uploadpics:s+"uploadpics.html",cutuploadpic:s+"cutuploadpic.html",cutuploadpics:s+"cutuploadpics.html",uploadfile:s+"uploadfile.html",uploadfiles:s+"uploadfiles.html",ckeditor:s+"ckeditor.html",ngtree:s+"ngtree.html","popover-tree":s+"popover-tree.html","date-range":s+"date-range.html","mos-radio-buttons":s+"mos-radio-buttons.html","mos-tree-grid":s+"mos-tree-grid.html",popoverUser:s+"popover-user.html","mos-radios":s+"mos-radios.html",label:s+"mos-default.html"})}]);